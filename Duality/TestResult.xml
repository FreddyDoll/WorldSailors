<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="D:\Games\duality-archive-2.x\Test\Duality.nunit" total="372" errors="0" failures="0" not-run="0" inconclusive="1" ignored="0" skipped="0" invalid="0" date="2021-04-19" time="21:45:30">
  <environment nunit-version="2.6.4.14350" clr-version="2.0.50727.9151" os-version="Microsoft Windows NT 6.2.9200.0" platform="Win32NT" cwd="D:\Games\duality-archive-2.x\packages\NUnit.Runners.2.6.4\tools" machine-name="DESKTOP-GMRO5F0" user="frede" user-domain="DESKTOP-GMRO5F0" />
  <culture-info current-culture="de-DE" current-uiculture="de-DE" />
  <test-suite type="Project" name="D:\Games\duality-archive-2.x\Test\Duality.nunit" executed="True" result="Success" success="True" time="13.161" asserts="0">
    <results>
      <test-suite type="Assembly" name="D:\Games\duality-archive-2.x\Build\Output\DualityTests.dll" executed="True" result="Success" success="True" time="6.872" asserts="0">
        <results>
          <test-suite type="Namespace" name="Duality" executed="True" result="Success" success="True" time="4.417" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="4.416" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Cloning" executed="True" result="Success" success="True" time="1.063" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CloneProviderTest" executed="True" result="Success" success="True" time="0.395" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.AdditiveDelegates" executed="True" result="Success" success="True" time="0.078" asserts="9" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CircularOwnership" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CloneComplexObject" executed="True" result="Success" success="True" time="0.027" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CloneMemberInfo" executed="True" result="Success" success="True" time="0.013" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.ClonePlainOldData" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CloneRecursiveGraphs" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CombinedReferenceAndWeakReference" executed="True" result="Inconclusive" success="False" time="0.013" asserts="0">
                            <reason>
                              <message><![CDATA[Weak references are broken right now, see issue #665. Re-activate assert as soon as the issue was addressed.]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.ComplexDelegates" executed="True" result="Success" success="True" time="0.015" asserts="22" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CopyToTarget" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CopyToTargetPreservation" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.ExplicitCloning" executed="True" result="Success" success="True" time="0.010" asserts="8" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.IdentityPreservation" executed="True" result="Success" success="True" time="0.009" asserts="12" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.InterfaceFieldsOwnership" executed="True" result="Success" success="True" time="0.002" asserts="4" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.OverwriteWithNull" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.OwnershipBehavior" executed="True" result="Success" success="True" time="0.003" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.PartialCloning" executed="True" result="Success" success="True" time="0.003" asserts="9" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.PerformanceTest" executed="True" result="Success" success="True" time="0.139" asserts="0">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.ReferenceBehavior" executed="True" result="Success" success="True" time="0.002" asserts="5" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.SelfReferentialObject" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.SimpleDelegates" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.SkippedObjects" executed="True" result="Success" success="True" time="0.002" asserts="5" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.StaticDelegates" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.StructInvestigate" executed="True" result="Success" success="True" time="0.005" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.WeakReferenceBehavior" executed="True" result="Success" success="True" time="0.001" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SpecificCloningTest" executed="True" result="Success" success="True" time="0.664" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneComponent" executed="True" result="Success" success="True" time="0.015" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneContentRef" executed="True" result="Success" success="True" time="0.005" asserts="6" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneCultureInfo" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneGameObject" executed="True" result="Success" success="True" time="0.033" asserts="5" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneHashSetReferenceAndNulls" executed="True" result="Success" success="True" time="0.004" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneHashSetReferenceType" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneHashSetValueType" executed="True" result="Success" success="True" time="0.006" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneJointRigidBodies" executed="True" result="Success" success="True" time="0.124" asserts="7" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneRegex" executed="True" result="Success" success="True" time="0.001" asserts="7" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneResource" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneScene" executed="True" result="Success" success="True" time="0.014" asserts="29" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CopyToGameObjectAddComponentEvent" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CopyToGameObjectAddGameObjectEvent" executed="True" result="Success" success="True" time="0.008" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CopyToGameObjectParentObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CopyToGameObjectParentScene" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CopyToGameObjectPreservation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.RealWorldPerformanceTest" executed="True" result="Success" success="True" time="0.406" asserts="0">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.TransformHierarchyInitialized" executed="True" result="Success" success="True" time="0.006" asserts="12" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Components" executed="True" result="Success" success="True" time="0.377" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ComponentExecutionOrderTest" executed="True" result="Success" success="True" time="0.218" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.BasicFunctionality" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                          <test-suite type="ParameterizedTest" name="EnforceOrderGameObjectActivate" executed="True" result="Success" success="True" time="0.017" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectActivate(True)" executed="True" result="Success" success="True" time="0.013" asserts="52" />
                              <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectActivate(False)" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="EnforceOrderGameObjectAdd" executed="True" result="Success" success="True" time="0.003" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectAdd(True)" executed="True" result="Success" success="True" time="0.001" asserts="52" />
                              <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectAdd(False)" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="EnforceOrderGameObjectDeactivate" executed="True" result="Success" success="True" time="0.004" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectDeactivate(True)" executed="True" result="Success" success="True" time="0.001" asserts="52" />
                              <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectDeactivate(False)" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="EnforceOrderGameObjectDispose" executed="True" result="Success" success="True" time="0.009" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectDispose(True)" executed="True" result="Success" success="True" time="0.006" asserts="52" />
                              <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectDispose(False)" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                            </results>
                          </test-suite>
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectIterateLoadedPrefab" executed="True" result="Success" success="True" time="0.053" asserts="6" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectIterateLoadedScene" executed="True" result="Success" success="True" time="0.009" asserts="6" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectIterateNew" executed="True" result="Success" success="True" time="0.001" asserts="6" />
                          <test-suite type="ParameterizedTest" name="EnforceOrderGameObjectRemove" executed="True" result="Success" success="True" time="0.004" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectRemove(True)" executed="True" result="Success" success="True" time="0.001" asserts="52" />
                              <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderGameObjectRemove(False)" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                            </results>
                          </test-suite>
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderPrefabLoad" executed="True" result="Success" success="True" time="0.006" asserts="52" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderPrefabSaved" executed="True" result="Success" success="True" time="0.001" asserts="52" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderPrefabSaving" executed="True" result="Success" success="True" time="0.003" asserts="52" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderSceneActivate" executed="True" result="Success" success="True" time="0.001" asserts="52" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderSceneDeactivate" executed="True" result="Success" success="True" time="0.000" asserts="52" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderSceneFind" executed="True" result="Success" success="True" time="0.001" asserts="51" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderSceneLoad" executed="True" result="Success" success="True" time="0.003" asserts="52" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderSceneSaved" executed="True" result="Success" success="True" time="0.001" asserts="52" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderSceneSaving" executed="True" result="Success" success="True" time="0.001" asserts="52" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.EnforceOrderSceneUpdate" executed="True" result="Success" success="True" time="0.020" asserts="52" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.ExecOrderAttributeAfter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.ExecOrderAttributeBefore" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.ExecOrderAttributeBeforeAndAfter" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.ExecOrderBaseTypeRule" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.ExecOrderInvalidType" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.ExecOrderLoopResolve" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.ExecOrderSpecificOverride" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.RequirementAttribute" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                          <test-case name="Duality.Tests.Components.ComponentExecutionOrderTest.RequirementLoopResolve" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ComponentRequirementMapTest" executed="True" result="Success" success="True" time="0.030" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Components.ComponentRequirementMapTest.AbstractRequirements" executed="True" result="Success" success="True" time="0.010" asserts="21" />
                          <test-case name="Duality.Tests.Components.ComponentRequirementMapTest.CyclicRequirements" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                          <test-case name="Duality.Tests.Components.ComponentRequirementMapTest.DirectRequirements" executed="True" result="Success" success="True" time="0.001" asserts="10" />
                          <test-case name="Duality.Tests.Components.ComponentRequirementMapTest.InvalidRequirements" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                          <test-case name="Duality.Tests.Components.ComponentRequirementMapTest.NoRequirements" executed="True" result="Success" success="True" time="0.001" asserts="10" />
                          <test-case name="Duality.Tests.Components.ComponentRequirementMapTest.RedundantRequirements" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                          <test-case name="Duality.Tests.Components.ComponentRequirementMapTest.SelfRequirements" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Duality.Tests.Components.ComponentRequirementMapTest.TransitiveRequirements" executed="True" result="Success" success="True" time="0.001" asserts="10" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ICmpInitializableTest" executed="True" result="Success" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Components.ICmpInitializableTest.ActivateDeactivate" executed="True" result="Success" success="True" time="0.002" asserts="16" />
                          <test-case name="Duality.Tests.Components.ICmpInitializableTest.AddRemove" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Duality.Tests.Components.ICmpInitializableTest.DeactivateComponentDispose" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Duality.Tests.Components.ICmpInitializableTest.DeactivateDeepGameObjectDispose" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Duality.Tests.Components.ICmpInitializableTest.DeactivateGameObjectDispose" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Duality.Tests.Components.ICmpInitializableTest.DeactivateSceneDispose" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Duality.Tests.Components.ICmpInitializableTest.IgnoreActiveStateInNonCurrentScene" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Duality.Tests.Components.ICmpInitializableTest.Serialize" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RigidBodyTest" executed="True" result="Success" success="True" time="0.077" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Components.RigidBodyTest.CopyAddShapes" executed="True" result="Success" success="True" time="0.003" asserts="4" />
                          <test-case name="Duality.Tests.Components.RigidBodyTest.CopyModifyShapes" executed="True" result="Success" success="True" time="0.001" asserts="6" />
                          <test-case name="Duality.Tests.Components.RigidBodyTest.CopyRemoveShapes" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                          <test-case name="Duality.Tests.Components.RigidBodyTest.CopyReplaceShapes" executed="True" result="Success" success="True" time="0.002" asserts="8" />
                          <test-case name="Duality.Tests.Components.RigidBodyTest.CreateEmptyBody" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Duality.Tests.Components.RigidBodyTest.FallingBallOnPlatform" executed="True" result="Success" success="True" time="0.057" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="TransformTest" executed="True" result="Success" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Components.TransformTest.CommitChangesPropagation" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                          <test-case name="Duality.Tests.Components.TransformTest.GetLocalPoint" executed="True" result="Success" success="True" time="0.001" asserts="20" />
                          <test-case name="Duality.Tests.Components.TransformTest.GetWorldPoint" executed="True" result="Success" success="True" time="0.001" asserts="20" />
                          <test-case name="Duality.Tests.Components.TransformTest.TransformHierarchy" executed="True" result="Success" success="True" time="0.001" asserts="9" />
                          <test-case name="Duality.Tests.Components.TransformTest.TransformHierarchyVelocity" executed="True" result="Success" success="True" time="0.006" asserts="30" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Drawing" executed="True" result="Success" success="True" time="0.160" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CanvasTest" executed="True" result="Success" success="True" time="0.159" asserts="0">
                        <categories>
                          <category name="Rendering" />
                        </categories>
                        <results>
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderAllShapes" executed="True" result="Success" success="True" time="0.097" asserts="1" />
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderAllShapesTransformed" executed="True" result="Success" success="True" time="0.027" asserts="1" />
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderDiagonalLine" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderFail" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderNothing" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderRedSquare" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="IO" executed="True" result="Success" success="True" time="0.049" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="NonClosingStreamWrapperTest" executed="True" result="Success" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.IO.NonClosingStreamWrapperTest.Close" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Duality.Tests.IO.NonClosingStreamWrapperTest.CloseAlreadyDisposed" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                          <test-case name="Duality.Tests.IO.NonClosingStreamWrapperTest.Read" executed="True" result="Success" success="True" time="0.004" asserts="2" />
                          <test-case name="Duality.Tests.IO.NonClosingStreamWrapperTest.Write" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PathOpTest" executed="True" result="Success" success="True" time="0.022" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.IO.PathOpTest.Combine" executed="True" result="Success" success="True" time="0.003" asserts="64" />
                          <test-case name="Duality.Tests.IO.PathOpTest.GetDirectoryName" executed="True" result="Success" success="True" time="0.002" asserts="56" />
                          <test-case name="Duality.Tests.IO.PathOpTest.GetExtension" executed="True" result="Success" success="True" time="0.001" asserts="56" />
                          <test-case name="Duality.Tests.IO.PathOpTest.GetFileName" executed="True" result="Success" success="True" time="0.001" asserts="56" />
                          <test-case name="Duality.Tests.IO.PathOpTest.GetFileNameWithoutExtension" executed="True" result="Success" success="True" time="0.001" asserts="56" />
                          <test-case name="Duality.Tests.IO.PathOpTest.GetFullPath" executed="True" result="Success" success="True" time="0.001" asserts="53" />
                          <test-case name="Duality.Tests.IO.PathOpTest.IsPathRooted" executed="True" result="Success" success="True" time="0.002" asserts="56" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SubStreamWrapperTest" executed="True" result="Success" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.IO.SubStreamWrapperTest.Read" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Duality.Tests.IO.SubStreamWrapperTest.SubSection" executed="True" result="Success" success="True" time="0.003" asserts="23" />
                          <test-case name="Duality.Tests.IO.SubStreamWrapperTest.Write" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="PluginManager" executed="True" result="Success" success="True" time="0.061" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CorePluginManagerTest" executed="True" result="Success" success="True" time="0.029" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.PluginManager.CorePluginManagerTest.LoadPlugins" executed="True" result="Success" success="True" time="0.023" asserts="11" />
                          <test-case name="Duality.Tests.PluginManager.CorePluginManagerTest.ResolveAssembly" executed="True" result="Success" success="True" time="0.002" asserts="18" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PluginManagerTest" executed="True" result="Success" success="True" time="0.027" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.PluginManager.PluginManagerTest.DuplicateLoad" executed="True" result="Success" success="True" time="0.002" asserts="9" />
                          <test-case name="Duality.Tests.PluginManager.PluginManagerTest.LoadPlugins" executed="True" result="Success" success="True" time="0.003" asserts="11" />
                          <test-case name="Duality.Tests.PluginManager.PluginManagerTest.LockedPlugin" executed="True" result="Success" success="True" time="0.003" asserts="4" />
                          <test-case name="Duality.Tests.PluginManager.PluginManagerTest.PluginLifecycle" executed="True" result="Success" success="True" time="0.002" asserts="9" />
                          <test-case name="Duality.Tests.PluginManager.PluginManagerTest.PluginLoaderInitTerminate" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                          <test-case name="Duality.Tests.PluginManager.PluginManagerTest.ReloadPlugin" executed="True" result="Success" success="True" time="0.002" asserts="10" />
                          <test-case name="Duality.Tests.PluginManager.PluginManagerTest.ResolveAssembly" executed="True" result="Success" success="True" time="0.001" asserts="5" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Resources" executed="True" result="Success" success="True" time="0.149" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ExplicitReferenceAttributeTest" executed="True" result="Success" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Resources.ExplicitReferenceAttributeTest.CircularReferences" executed="True" result="Success" success="True" time="0.004" asserts="8" />
                          <test-case name="Duality.Tests.Resources.ExplicitReferenceAttributeTest.NoExplicitReferences" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Duality.Tests.Resources.ExplicitReferenceAttributeTest.RegularReferences" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Duality.Tests.Resources.ExplicitReferenceAttributeTest.VoidReferences" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PrefabTest" executed="True" result="Success" success="True" time="0.066" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Resources.PrefabTest.AllowAdditionalObjects" executed="True" result="Success" success="True" time="0.002" asserts="2" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.ApplyChanges" executed="True" result="Success" success="True" time="0.007" asserts="4" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.ApplyPrefab" executed="True" result="Success" success="True" time="0.003" asserts="7" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.ApplyPrefabKeepsObjects" executed="True" result="Success" success="True" time="0.001" asserts="6" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.CreatePrefab" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.InstantiatePerformance" executed="True" result="Success" success="True" time="0.019" asserts="0">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Duality.Tests.Resources.PrefabTest.NestedPrefabChangeListPreservation" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.PrefabChangeListCloningBug" executed="True" result="Success" success="True" time="0.004" asserts="8" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.SameNamePropertyChanges" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-suite type="ParameterizedTest" name="TransformHierarchyPrefabSceneBug" executed="True" result="Success" success="True" time="0.008" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Resources.PrefabTest.TransformHierarchyPrefabSceneBug(True)" executed="True" result="Success" success="True" time="0.004" asserts="2" />
                              <test-case name="Duality.Tests.Resources.PrefabTest.TransformHierarchyPrefabSceneBug(False)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RenderTargetTest" executed="True" result="Success" success="True" time="0.025" asserts="0">
                        <categories>
                          <category name="Rendering" />
                        </categories>
                        <results>
                          <test-case name="Duality.Tests.Resources.RenderTargetTest.RenderAndDispose" executed="True" result="Success" success="True" time="0.011" asserts="1" />
                          <test-case name="Duality.Tests.Resources.RenderTargetTest.RenderAntialiased" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                          <test-case name="Duality.Tests.Resources.RenderTargetTest.RenderBasic" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Duality.Tests.Resources.RenderTargetTest.RenderFail" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ResourceTest" executed="True" result="Success" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Resources.ResourceTest.GetFileExtByType" executed="True" result="Success" success="True" time="0.001" asserts="9" />
                          <test-case name="Duality.Tests.Resources.ResourceTest.GetTypeByFileName" executed="True" result="Success" success="True" time="0.001" asserts="8" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SceneTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Resources.SceneTest.AddRemoveGameObjects" executed="True" result="Success" success="True" time="0.001" asserts="11" />
                          <test-case name="Duality.Tests.Resources.SceneTest.AddRemoveGameObjectsMultiScene" executed="True" result="Success" success="True" time="0.000" asserts="9" />
                          <test-case name="Duality.Tests.Resources.SceneTest.GameObjectActiveLists" executed="True" result="Success" success="True" time="0.001" asserts="6" />
                          <test-case name="Duality.Tests.Resources.SceneTest.GameObjectHierarchy" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                          <test-case name="Duality.Tests.Resources.SceneTest.GameObjectParentLoop" executed="True" result="Success" success="True" time="0.001" asserts="8" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchReloadDeferredDispose" executed="True" result="Success" success="True" time="0.002" asserts="6" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchToDuringEnter" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchToDuringLeave" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchToDuringUpdate" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchToNonExistent" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchToRegular" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Serialization" executed="True" result="Success" success="True" time="2.028" asserts="0">
                    <results>
                      <test-suite type="ParameterizedFixture" name="SerializerTest" executed="True" result="Success" success="True" time="2.028" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="SerializerTest(Duality.Serialization.BinarySerializer)" executed="True" result="Success" success="True" time="1.141" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).BackwardsCompatibility" executed="True" result="Success" success="True" time="0.007" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).BlendInOtherData" executed="True" result="Success" success="True" time="0.010" asserts="3" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).CalcUniqueIdentifier" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).CleanupAfterDisposedStream" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).DeserializeMismatchedComponentType" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).DeserializeNonExistentComponentType" executed="True" result="Success" success="True" time="0.798" asserts="4" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).PerformanceTest" executed="True" result="Success" success="True" time="0.125" asserts="0">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).RandomAccess" executed="True" result="Success" success="True" time="0.011" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SaveMultipleResourcesToStream" executed="True" result="Success" success="True" time="0.009" asserts="12" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SequentialAccess" executed="True" result="Success" success="True" time="0.013" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeCharData" executed="True" result="Success" success="True" time="0.008" asserts="256" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeCultureInfo" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeEmptyArrays" executed="True" result="Success" success="True" time="0.009" asserts="17" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeEnumArrays" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeFlatStruct" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeHashSetReferenceAndNulls" executed="True" result="Success" success="True" time="0.006" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeHashSetReferenceType" executed="True" result="Success" success="True" time="0.007" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeHashSetValueType" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeMemberInfo" executed="True" result="Success" success="True" time="0.003" asserts="6" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeNullDefault" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeObjectTree" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializePlainOldData" executed="True" result="Success" success="True" time="0.007" asserts="7" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializePrimitiveArrays" executed="True" result="Success" success="True" time="0.005" asserts="12" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeRegex" executed="True" result="Success" success="True" time="0.003" asserts="7" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeStringData" executed="True" result="Success" success="True" time="0.001" asserts="16" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).SerializeStructArrays" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                              <test-suite type="ParameterizedTest" name="ConvertFormat" executed="True" result="Success" success="True" time="0.051" asserts="0">
                                <results>
                                  <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.BinarySerializer).ConvertFormat(Duality.Serialization.XmlSerializer)" executed="True" result="Success" success="True" time="0.051" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="SerializerTest(Duality.Serialization.XmlSerializer)" executed="True" result="Success" success="True" time="0.883" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).BackwardsCompatibility" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).BlendInOtherData" executed="True" result="Success" success="True" time="0.010" asserts="3" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).CalcUniqueIdentifier" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).CleanupAfterDisposedStream" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).DeserializeMismatchedComponentType" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).DeserializeNonExistentComponentType" executed="True" result="Success" success="True" time="0.119" asserts="4" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).PerformanceTest" executed="True" result="Success" success="True" time="0.490" asserts="0">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).RandomAccess" executed="True" result="Success" success="True" time="0.056" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SaveMultipleResourcesToStream" executed="True" result="Success" success="True" time="0.001" asserts="12" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SequentialAccess" executed="True" result="Success" success="True" time="0.039" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeCharData" executed="True" result="Success" success="True" time="0.007" asserts="256" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeCultureInfo" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeEmptyArrays" executed="True" result="Success" success="True" time="0.004" asserts="17" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeEnumArrays" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeFlatStruct" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeHashSetReferenceAndNulls" executed="True" result="Success" success="True" time="0.018" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeHashSetReferenceType" executed="True" result="Success" success="True" time="0.018" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeHashSetValueType" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeMemberInfo" executed="True" result="Success" success="True" time="0.001" asserts="6" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeNullDefault" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeObjectTree" executed="True" result="Success" success="True" time="0.009" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializePlainOldData" executed="True" result="Success" success="True" time="0.001" asserts="7" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializePrimitiveArrays" executed="True" result="Success" success="True" time="0.008" asserts="12" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeRegex" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeStringData" executed="True" result="Success" success="True" time="0.020" asserts="16" />
                              <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).SerializeStructArrays" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-suite type="ParameterizedTest" name="ConvertFormat" executed="True" result="Success" success="True" time="0.018" asserts="0">
                                <results>
                                  <test-case name="Duality.Tests.Serialization.SerializerTest(Duality.Serialization.XmlSerializer).ConvertFormat(Duality.Serialization.BinarySerializer)" executed="True" result="Success" success="True" time="0.017" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Utility" executed="True" result="Success" success="True" time="0.490" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ExtMethodsIListTest" executed="True" result="Success" success="True" time="0.066" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="StableSortClass" executed="True" result="Success" success="True" time="0.041" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortClass(100,0,100)" executed="True" result="Success" success="True" time="0.018" asserts="15" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortClass(100,0,30)" executed="True" result="Success" success="True" time="0.003" asserts="18" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortClass(100,70,30)" executed="True" result="Success" success="True" time="0.002" asserts="18" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortClass(100,30,30)" executed="True" result="Success" success="True" time="0.001" asserts="21" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortClass(0,0,0)" executed="True" result="Success" success="True" time="0.000" asserts="15" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortClass(1,0,1)" executed="True" result="Success" success="True" time="0.000" asserts="15" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortClass(2,0,2)" executed="True" result="Success" success="True" time="0.000" asserts="15" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="StableSortPrimitive" executed="True" result="Success" success="True" time="0.023" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortPrimitive(100,0,100)" executed="True" result="Success" success="True" time="0.006" asserts="15" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortPrimitive(100,0,30)" executed="True" result="Success" success="True" time="0.002" asserts="18" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortPrimitive(100,70,30)" executed="True" result="Success" success="True" time="0.001" asserts="18" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortPrimitive(100,30,30)" executed="True" result="Success" success="True" time="0.000" asserts="21" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortPrimitive(0,0,0)" executed="True" result="Success" success="True" time="0.000" asserts="15" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortPrimitive(1,0,1)" executed="True" result="Success" success="True" time="0.000" asserts="15" />
                              <test-case name="Duality.Tests.Utility.ExtMethodsIListTest.StableSortPrimitive(2,0,2)" executed="True" result="Success" success="True" time="0.000" asserts="15" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ExtMethodsMemberInfo" executed="True" result="Success" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.ExtMethodsMemberInfo.IsEquivalentEvents" executed="True" result="Success" success="True" time="0.001" asserts="6" />
                          <test-case name="Duality.Tests.Utility.ExtMethodsMemberInfo.IsEquivalentFields" executed="True" result="Success" success="True" time="0.001" asserts="6" />
                          <test-case name="Duality.Tests.Utility.ExtMethodsMemberInfo.IsEquivalentMethods" executed="True" result="Success" success="True" time="0.001" asserts="20" />
                          <test-case name="Duality.Tests.Utility.ExtMethodsMemberInfo.IsEquivalentProperties" executed="True" result="Success" success="True" time="0.001" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ExtMethodsTypeInfo" executed="True" result="Success" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.ExtMethodsTypeInfo.BaseTypeInfo" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Duality.Tests.Utility.ExtMethodsTypeInfo.DeclaredFieldsDeep" executed="True" result="Success" success="True" time="0.001" asserts="9" />
                          <test-case name="Duality.Tests.Utility.ExtMethodsTypeInfo.InheritanceDepth" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="GenericOperatorTest" executed="True" result="Success" success="True" time="0.090" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.ColorRgbaMath" executed="True" result="Success" success="True" time="0.025" asserts="5" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.ConvertOperation" executed="True" result="Success" success="True" time="0.024" asserts="4" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.FloatMath" executed="True" result="Success" success="True" time="0.010" asserts="13" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.IntMath" executed="True" result="Success" success="True" time="0.008" asserts="13" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.LerpOperation" executed="True" result="Success" success="True" time="0.006" asserts="6" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.LogicalOperation" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.VectorMath" executed="True" result="Success" success="True" time="0.003" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="GridTest" executed="True" result="Success" success="True" time="0.036" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.GridTest.AssumeRect" executed="True" result="Success" success="True" time="0.004" asserts="17" />
                          <test-case name="Duality.Tests.Utility.GridTest.Basics" executed="True" result="Success" success="True" time="0.003" asserts="17" />
                          <test-case name="Duality.Tests.Utility.GridTest.CopyConvert" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Duality.Tests.Utility.GridTest.CopySelect" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Duality.Tests.Utility.GridTest.Fill" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Duality.Tests.Utility.GridTest.Find" executed="True" result="Success" success="True" time="0.003" asserts="4" />
                          <test-case name="Duality.Tests.Utility.GridTest.Objects" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Duality.Tests.Utility.GridTest.Resize" executed="True" result="Success" success="True" time="0.001" asserts="12" />
                          <test-case name="Duality.Tests.Utility.GridTest.ResizeClear" executed="True" result="Success" success="True" time="0.001" asserts="15" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MathFTest" executed="True" result="Success" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.MathFTest.Clamp01Checks" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                          <test-case name="Duality.Tests.Utility.MathFTest.InvLerpChecks" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                          <test-case name="Duality.Tests.Utility.MathFTest.SmoothStepChecks" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ObjectCreatorTest" executed="True" result="Success" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.ObjectCreatorTest.CreateInstanceOf" executed="True" result="Success" success="True" time="0.005" asserts="24" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Point2Test" executed="True" result="Success" success="True" time="0.017" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.Point2Test.Casting" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Duality.Tests.Utility.Point2Test.Constuctors" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Duality.Tests.Utility.Point2Test.Distance" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Duality.Tests.Utility.Point2Test.EqualityChecks" executed="True" result="Success" success="True" time="0.001" asserts="22" />
                          <test-case name="Duality.Tests.Utility.Point2Test.Indexing" executed="True" result="Success" success="True" time="0.002" asserts="8" />
                          <test-case name="Duality.Tests.Utility.Point2Test.MinMax" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Duality.Tests.Utility.Point2Test.PointMath" executed="True" result="Success" success="True" time="0.001" asserts="30" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RawListTest" executed="True" result="Success" success="True" time="0.023" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.RawListTest.Basics" executed="True" result="Success" success="True" time="0.002" asserts="19" />
                          <test-case name="Duality.Tests.Utility.RawListTest.CopyTo" executed="True" result="Success" success="True" time="0.001" asserts="10" />
                          <test-case name="Duality.Tests.Utility.RawListTest.Move" executed="True" result="Success" success="True" time="0.001" asserts="6" />
                          <test-case name="Duality.Tests.Utility.RawListTest.RemoveAll" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Duality.Tests.Utility.RawListTest.RemoveResetsReferenceTypesToDefault" executed="True" result="Success" success="True" time="0.002" asserts="31" />
                          <test-case name="Duality.Tests.Utility.RawListTest.Resize" executed="True" result="Success" success="True" time="0.002" asserts="5" />
                          <test-case name="Duality.Tests.Utility.RawListTest.Sort" executed="True" result="Success" success="True" time="0.002" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RectTest" executed="True" result="Success" success="True" time="0.032" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.RectTest.BasicProperties" executed="True" result="Success" success="True" time="0.001" asserts="20" />
                          <test-case name="Duality.Tests.Utility.RectTest.BasicTransformation" executed="True" result="Success" success="True" time="0.001" asserts="5" />
                          <test-case name="Duality.Tests.Utility.RectTest.Constuctors" executed="True" result="Success" success="True" time="0.000" asserts="16" />
                          <test-case name="Duality.Tests.Utility.RectTest.Containment" executed="True" result="Success" success="True" time="0.001" asserts="22" />
                          <test-case name="Duality.Tests.Utility.RectTest.CreateAlignment" executed="True" result="Success" success="True" time="0.001" asserts="9" />
                          <test-case name="Duality.Tests.Utility.RectTest.EqualityChecks" executed="True" result="Success" success="True" time="0.001" asserts="30" />
                          <test-case name="Duality.Tests.Utility.RectTest.ExpandTo" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                          <test-suite type="ParameterizedTest" name="IntersectionCheking" executed="True" result="Success" success="True" time="0.004" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Utility.RectTest.IntersectionCheking(-5,-10,10,20)" description="Regular Rect" executed="True" result="Success" success="True" time="0.001" asserts="23" />
                              <test-case name="Duality.Tests.Utility.RectTest.IntersectionCheking(5,10,-10,-20)" description="Negative Rect" executed="True" result="Success" success="True" time="0.000" asserts="23" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="IntersectionRect" executed="True" result="Success" success="True" time="0.004" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Utility.RectTest.IntersectionRect(-5,-10,10,20)" description="Regular Rect" executed="True" result="Success" success="True" time="0.001" asserts="13" />
                              <test-case name="Duality.Tests.Utility.RectTest.IntersectionRect(5,10,-10,-20)" description="Negative Rect" executed="True" result="Success" success="True" time="0.000" asserts="13" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ReflectionHelperTest" executed="True" result="Success" success="True" time="0.070" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.ReflectionHelperTest.CustomTypeResolve" executed="True" result="Success" success="True" time="0.052" asserts="2" />
                          <test-case name="Duality.Tests.Utility.ReflectionHelperTest.IsPlainOldData" executed="True" result="Success" success="True" time="0.001" asserts="22" />
                          <test-case name="Duality.Tests.Utility.ReflectionHelperTest.RegularTypeResolve" executed="True" result="Success" success="True" time="0.002" asserts="11" />
                          <test-case name="Duality.Tests.Utility.ReflectionHelperTest.VisitorContentRef" executed="True" result="Success" success="True" time="0.008" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="TargetResizeTest" executed="True" result="Success" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.TargetResizeTest.Fill" executed="True" result="Success" success="True" time="0.001" asserts="5" />
                          <test-case name="Duality.Tests.Utility.TargetResizeTest.Fit" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Duality.Tests.Utility.TargetResizeTest.None" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Duality.Tests.Utility.TargetResizeTest.Stretch" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Vector2Test" executed="True" result="Success" success="True" time="0.029" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.Vector2Test.Angle" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.Constuctors" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.DotProduct" executed="True" result="Success" success="True" time="0.000" asserts="106" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.EqualityChecks" executed="True" result="Success" success="True" time="0.000" asserts="22" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.FromAngleLength" executed="True" result="Success" success="True" time="0.001" asserts="208" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.Indexing" executed="True" result="Success" success="True" time="0.001" asserts="8" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.Length" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.LengthSquared" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.MathOperators" executed="True" result="Success" success="True" time="0.000" asserts="16" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.MinMax" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.Normalize" executed="True" result="Success" success="True" time="0.000" asserts="402" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.Normalized" executed="True" result="Success" success="True" time="0.001" asserts="702" />
                          <test-case name="Duality.Tests.Utility.Vector2Test.Perpendicular" executed="True" result="Success" success="True" time="0.001" asserts="416" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Vector3Test" executed="True" result="Success" success="True" time="0.024" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.Vector3Test.Constuctors" executed="True" result="Success" success="True" time="0.001" asserts="15" />
                          <test-case name="Duality.Tests.Utility.Vector3Test.DotProduct" executed="True" result="Success" success="True" time="0.001" asserts="112" />
                          <test-case name="Duality.Tests.Utility.Vector3Test.EqualityChecks" executed="True" result="Success" success="True" time="0.001" asserts="38" />
                          <test-case name="Duality.Tests.Utility.Vector3Test.Indexing" executed="True" result="Success" success="True" time="0.001" asserts="10" />
                          <test-case name="Duality.Tests.Utility.Vector3Test.Length" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Duality.Tests.Utility.Vector3Test.LengthSquared" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Duality.Tests.Utility.Vector3Test.MathOperators" executed="True" result="Success" success="True" time="0.001" asserts="24" />
                          <test-case name="Duality.Tests.Utility.Vector3Test.MinMax" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                          <test-case name="Duality.Tests.Utility.Vector3Test.Normalize" executed="True" result="Success" success="True" time="0.001" asserts="603" />
                          <test-case name="Duality.Tests.Utility.Vector3Test.Normalized" executed="True" result="Success" success="True" time="0.002" asserts="1213" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Vector4Test" executed="True" result="Success" success="True" time="0.026" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.Vector4Test.Constuctors" executed="True" result="Success" success="True" time="0.001" asserts="32" />
                          <test-case name="Duality.Tests.Utility.Vector4Test.DotProduct" executed="True" result="Success" success="True" time="0.001" asserts="120" />
                          <test-case name="Duality.Tests.Utility.Vector4Test.EqualityChecks" executed="True" result="Success" success="True" time="0.001" asserts="62" />
                          <test-case name="Duality.Tests.Utility.Vector4Test.Indexing" executed="True" result="Success" success="True" time="0.001" asserts="12" />
                          <test-case name="Duality.Tests.Utility.Vector4Test.Length" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Duality.Tests.Utility.Vector4Test.LengthSquared" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Duality.Tests.Utility.Vector4Test.MathOperators" executed="True" result="Success" success="True" time="0.001" asserts="32" />
                          <test-case name="Duality.Tests.Utility.Vector4Test.MinMax" executed="True" result="Success" success="True" time="0.001" asserts="8" />
                          <test-case name="Duality.Tests.Utility.Vector4Test.Normalize" executed="True" result="Success" success="True" time="0.001" asserts="804" />
                          <test-case name="Duality.Tests.Utility.Vector4Test.Normalized" executed="True" result="Success" success="True" time="0.001" asserts="764" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\Games\duality-archive-2.x\Build\Output\DualityEditorTests.dll" executed="True" result="Success" success="True" time="6.261" asserts="0">
        <results>
          <test-suite type="Namespace" name="Duality" executed="True" result="Success" success="True" time="2.665" asserts="0">
            <results>
              <test-suite type="Namespace" name="Editor" executed="True" result="Success" success="True" time="2.665" asserts="0">
                <results>
                  <test-suite type="Namespace" name="PackageManagement" executed="True" result="Success" success="True" time="2.561" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="2.561" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="PackageManagerTest" executed="True" result="Success" success="True" time="2.560" asserts="0">
                            <results>
                              <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.DuplicatePackage" executed="True" result="Success" success="True" time="0.742" asserts="18" />
                              <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.EmptySetup" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                              <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.GetLatestDualityPackages" executed="True" result="Success" success="True" time="0.059" asserts="5" />
                              <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.GetPackage" executed="True" result="Success" success="True" time="0.014" asserts="4" />
                              <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.InstallNonExistent" executed="True" result="Success" success="True" time="0.025" asserts="6" />
                              <test-suite type="ParameterizedTest" name="InstallPackage" executed="True" result="Success" success="True" time="0.367" asserts="0">
                                <results>
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.InstallPackage(Duality Plugin, No Dependencies)" executed="True" result="Success" success="True" time="0.041" asserts="15" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.InstallPackage(Duality Plugin, With Duality Dependencies)" executed="True" result="Success" success="True" time="0.044" asserts="18" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.InstallPackage(Duality Plugin, With Lib Dependencies)" executed="True" result="Success" success="True" time="0.044" asserts="14" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.InstallPackage(Duality Non-Plugin Package)" executed="True" result="Success" success="True" time="0.030" asserts="11" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.InstallPackage(Package Already Installed)" executed="True" result="Success" success="True" time="0.036" asserts="6" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.InstallPackage(Package Dependency Already Installed)" executed="True" result="Success" success="True" time="0.052" asserts="9" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.InstallPackage(Older Package Dependency Installed)" executed="True" result="Success" success="True" time="0.055" asserts="19" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.InstallPackage(Newer Package Dependency Installed)" executed="True" result="Success" success="True" time="0.047" asserts="9" />
                                </results>
                              </test-suite>
                              <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.NonExistentConfigFile" executed="True" result="Success" success="True" time="0.002" asserts="4" />
                              <test-suite type="ParameterizedTest" name="PackageRestore" executed="True" result="Success" success="True" time="0.796" asserts="0">
                                <results>
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.PackageRestore(Full Restore, Newest)" executed="True" result="Success" success="True" time="0.094" asserts="15" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.PackageRestore(Full Restore, Specific)" executed="True" result="Success" success="True" time="0.062" asserts="15" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.PackageRestore(Partial Restore, Newest)" executed="True" result="Success" success="True" time="0.066" asserts="9" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.PackageRestore(Partial Restore, Specific)" executed="True" result="Success" success="True" time="0.062" asserts="9" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.PackageRestore(Partial Restore, Implicit Update)" executed="True" result="Success" success="True" time="0.104" asserts="17" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.PackageRestore(Full Uninstall)" executed="True" result="Success" success="True" time="0.082" asserts="9" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.PackageRestore(Partial Uninstall, Leaf)" executed="True" result="Success" success="True" time="0.072" asserts="7" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.PackageRestore(Dependency Uninstall, Reinstall)" executed="True" result="Success" success="True" time="0.085" asserts="14" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.PackageRestore(Dependency Uninstall, Revert to Old)" executed="True" result="Success" success="True" time="0.152" asserts="14" />
                                </results>
                              </test-suite>
                              <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.UninstallNonExistent" executed="True" result="Success" success="True" time="0.013" asserts="0" />
                              <test-suite type="ParameterizedTest" name="UninstallPackage" executed="True" result="Success" success="True" time="0.304" asserts="0">
                                <results>
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.UninstallPackage(Duality Plugin, No Dependencies)" executed="True" result="Success" success="True" time="0.028" asserts="7" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.UninstallPackage(Duality Plugin, With Duality Dependencies)" executed="True" result="Success" success="True" time="0.032" asserts="7" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.UninstallPackage(Duality Plugin, With Lib Dependencies)" executed="True" result="Success" success="True" time="0.055" asserts="8" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.UninstallPackage(Shared Dependencies)" executed="True" result="Success" success="True" time="0.058" asserts="7" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.UninstallPackage(Interconnected Dependencies)" executed="True" result="Success" success="True" time="0.122" asserts="11" />
                                </results>
                              </test-suite>
                              <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.UpdateNonExistent" executed="True" result="Success" success="True" time="0.026" asserts="5" />
                              <test-suite type="ParameterizedTest" name="UpdatePackage" executed="True" result="Success" success="True" time="0.185" asserts="0">
                                <results>
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.UpdatePackage(Duality Plugin, No Dependencies)" executed="True" result="Success" success="True" time="0.033" asserts="10" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.UpdatePackage(Duality Plugin, With Duality Dependencies)" executed="True" result="Success" success="True" time="0.075" asserts="14" />
                                  <test-case name="Duality.Editor.PackageManagement.Tests.PackageManagerTest.UpdatePackage(Duality Plugin, With Lib Dependencies)" executed="True" result="Success" success="True" time="0.072" asserts="14" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.095" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="DataObjectExtensionsTest" executed="True" result="Success" success="True" time="0.053" asserts="0">
                        <results>
                          <test-case name="Duality.Editor.Tests.DataObjectExtensionsTest.GetBatchInfo" executed="True" result="Success" success="True" time="0.010" asserts="4" />
                          <test-case name="Duality.Editor.Tests.DataObjectExtensionsTest.GetComponents" executed="True" result="Success" success="True" time="0.004" asserts="16" />
                          <test-case name="Duality.Editor.Tests.DataObjectExtensionsTest.GetContentRefs" executed="True" result="Success" success="True" time="0.003" asserts="6" />
                          <test-case name="Duality.Editor.Tests.DataObjectExtensionsTest.GetGameObjects" executed="True" result="Success" success="True" time="0.003" asserts="22" />
                          <test-case name="Duality.Editor.Tests.DataObjectExtensionsTest.GetIColorData" executed="True" result="Success" success="True" time="0.012" asserts="8" />
                          <test-case name="Duality.Editor.Tests.DataObjectExtensionsTest.GetIColorDataString" executed="True" result="Success" success="True" time="0.001" asserts="8" />
                          <test-case name="Duality.Editor.Tests.DataObjectExtensionsTest.GetString" executed="True" result="Success" success="True" time="0.001" asserts="12" />
                          <test-case name="Duality.Editor.Tests.DataObjectExtensionsTest.WrappedDataReference" executed="True" result="Success" success="True" time="0.001" asserts="24" />
                          <test-case name="Duality.Editor.Tests.DataObjectExtensionsTest.WrappedDataValue" executed="True" result="Success" success="True" time="0.001" asserts="24" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ObjectPropertyChangedEventArgsTest" executed="True" result="Success" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="Duality.Editor.Tests.ObjectPropertyChangedEventArgsTest.CompleteChange" executed="True" result="Success" success="True" time="0.003" asserts="14" />
                          <test-case name="Duality.Editor.Tests.ObjectPropertyChangedEventArgsTest.RegularChange" executed="True" result="Success" success="True" time="0.001" asserts="14" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PathHelperTest" executed="True" result="Success" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="Duality.Editor.Tests.PathHelperTest.IsPathVisible" executed="True" result="Success" success="True" time="0.004" asserts="24" />
                          <test-case name="Duality.Editor.Tests.PathHelperTest.MakeFilePathRelative" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="PluginManager" executed="True" result="Success" success="True" time="0.021" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="EditorPluginManagerTest" executed="True" result="Success" success="True" time="0.021" asserts="0">
                            <results>
                              <test-case name="Duality.Editor.Tests.PluginManager.EditorPluginManagerTest.LoadPlugins" executed="True" result="Success" success="True" time="0.016" asserts="9" />
                              <test-case name="Duality.Editor.Tests.PluginManager.EditorPluginManagerTest.ResolveAssembly" executed="True" result="Success" success="True" time="0.001" asserts="14" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>